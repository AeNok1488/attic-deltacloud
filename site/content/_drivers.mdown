# Deltacloud Drivers

Deltacloud provides drivers for a [growing number](drivers.html#providers) of popular
IaaS cloud providers. This page contains notes pertinent to specific cloud provider drivers, such
as the [credentials](drivers.html#credentials) that should be used for a given cloud provider.
Furthermore the information here outlines the mechanism through which any API call sent by a
given client to a Deltacloud server instance may be routed to a specific driver, regardless
of the 'default' driver that the Deltacloud server was invoked for.

------------------------------------------------

## Dynamic driver switching

When the Deltacloud server is started it is passed a parameter
that specifies the **default** driver to be used for API operations:

    $ deltacloudd -i ec2

The above for example starts the Detlacloud server with the Amazon EC2 driver. Whilst
it is possible to start a number of Deltacloud server instances for each cloud provider
that you wish to connect to (e.g., on different ports), a mechanism is provided with which
to instruct the server to use a specific driver, regardless of the current default. The
Deltacloud API **drivers** colletion (e.g. GET /api/drivers) provides a list of all currently
supported cloud provider drivers.

Some drivers also support the notion of a *provider*. Changing the provider
makes it possible to use the same driver against different instances of a
cloud, for example different regions in EC2 or different installations of
RHEV-M. The possible range of values for the provider is driver-specific,
and listed in the notes for each driver below.

The driver and provider can be selected in one of two ways:

1. Through the request headers `X-Deltacloud-Driver` and
   `X-Deltacloud-Provider`. For example, including the headers
   `X-Deltacloud-Driver: ec2` and `X-Deltacloud-Provider: eu-west-1`
   ensures that a request will be serviced by the EC2 driver, and that the
   driver will use the eu-west-1 region in EC2.
2. Through the matrix request parameters `driver` and `provider` in the
   `api` component of the server's URL. For example, requesting
   `http://localhost:3001/api;driver=ec2;provider=eu-west-1` has the same
   effect as using the two request headers in the example above.

------------------------------------------------

## Driver functionality and Credentials
<table providers></table>
<a name=providers>.



------------------------------------------------

<a name=specific_driver_notes> .

## Notes on specific drivers

### EC2 Driver

The providers for the EC2 driver correspond to AWS's regions, and currently
are `us-east-1`, `us-east-1`, `eu-west-1`, `ap-southeast-1`.

------------------------------------------------

### Eucalyptus Driver

The Eucalyptus driver is based on the EC2 driver.

The driver allows selecting the Eucalyptus installation by setting a
provider in the format

    ec2=IP[:PORT];s3=IP[:PORT]

For example, for the Eucalyptus installation at `192.168.1.1:8773` and a
Walrus installation at `192.168.1.2:8773`, the driver can be pointed at
that installation by passing the request headers

    X-Deltacloud-Driver: eucalyptus
    X-Deltacloud-Provider: ec2=192.168.1.1:8773;s3=192.168.1.2:8773

------------------------------------------------

### RHEV-M Driver

The RHEV-M driver supports latest release of <a href="http://www.redhat.com/virtualization/rhev/server/"
target="_blank">Red Hat Enterprise Virtualization Manager</a> (3.0 currently).
In order to make the driver work with this provider, you need to set an/the
API_PROVIDER environment variable or use the 'X-Deltacloud-Provider' request
header to the URL of the RHEV-M REST API entry point. The usual URL looks like:

    API_PROVIDER="https://rhevm.hostname.com:8443/rhevm-api;645e425e-66fe-4ac9-8874-537bd10ef08d" 

Note: To make sure that you have right credentials, you can try to access 
<a href="">https://rhevm.hostname.com:8443/rhevm-api</a> in your browser.
If you're able to authenticate within the browser, then the crendentials you used
are valid Deltacloud credentials.

Note: In order to make RHEV-M driver work properly, you need to set the RHEV-M
<a href="http://markmc.fedorapeople.org/rhevm-api/en-US/html-single/index.html#chap-REST_API_Guide-Data_Centers"
target="_blank">Data Center</a> UUID you want to speak with in API_PROVIDER url (see the example
above). To obtain a list of all Data Centers you can choose from, start Deltacloud API without
specifying a datacenter in the API_PROVIDER URL and do this request:

    GET /api/drivers/rhevm?format=xml

The list of possible datacenters will appear in the 'providers' section.

------------------------------------------------

### VMware vSphere Driver

For details on how to make the VMware vSphere driver work with Deltacloud API,
please refer to <a href="https://www.aeolusproject.org/redmine/projects/aeolus/wiki/VSphere_Setup"
target="_blank">vSphere Setup</a> in Aeolus project wiki.

In order to connect to vSphere, you need to set the API_PROVIDER environment
variable or use the 'X-Deltacloud-Provider' HTTP header in the request to the vSphere
host you want to use. Example:

    API_PROVIDER="vsphere.hostname.com"

The username and password in 401 challenge should be (your???) the same as in vSphere Control
Center in the vSphere box(clen nechat, ak sa boxom mysli nejaky checkbox, a nepatri to k nazvu).

------------------------------------------------

### OpenStack Driver

To connect to OpenStack API, you will need to set the API_provider environment
variable or the 'X-Deltacloud-Provider' HTTP header to a valid OpenStack API
entrypoint. 

------------------------------------------------

### Rackspace Driver

When using the Rackspace-cloud driver (Rackspace cloud used to be called
"Mosso") - the password in a HTTP 401 challenge should be your API key, NOT
your rackspace account password.  You can get the API-key, or generate a
new one, from the rackspace console.

------------------------------------------------

### RimuHosting

Further details coming soon.

------------------------------------------------

### OpenNebula

When using the [OpenNebula](http://www.opennebula.org/) driver, the
credentials passed in response to the HTTP 401 authentication challenge
should be your OpenNebula user and password.

The address, on which the OCCI server is listening, needs to be defined in
an environment variable called OCCI_URL.

------------------------------------------------

### IBM Smartcloud Driver

When using the IBM SmartCloud driver, the credentials passed in response to
the HTTP 401 authentication challenge should be your IBM SmartCloud
username and password.
